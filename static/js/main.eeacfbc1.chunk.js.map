{"version":3,"sources":["App.tsx","index.tsx"],"names":["App","state","pressed","pressedKey","listenKeyups","event","setState","key","document","addEventListener","this","removeEventListener","className","React","Component","ReactDOM","render","getElementById"],"mappings":"oNAOaA,EAAb,4MACEC,MAAyB,CACvBC,SAAS,EACTC,WAAY,IAHhB,EAcEC,aAAe,SAACC,GACd,EAAKC,SAAS,CACZJ,SAAS,EACTC,WAAYE,EAAME,OAjBxB,uDAME,WACEC,SAASC,iBAAiB,QAASC,KAAKN,gBAP5C,kCAUE,WACEI,SAASG,oBAAoB,QAASD,KAAKN,gBAX/C,oBAqBE,WACE,MAAgCM,KAAKT,MAA7BC,EAAR,EAAQA,QAASC,EAAjB,EAAiBA,WAEjB,OACE,qBAAKS,UAAU,MAAf,SACE,mBAAGA,UAAU,eAAb,SACIV,EAAD,mCAC+BC,EAD/B,KAEG,kCA7Bd,GAAyBU,IAAMC,W,MCF/BC,IAASC,OACP,cAAC,EAAD,IACAR,SAASS,eAAe,W","file":"static/js/main.eeacfbc1.chunk.js","sourcesContent":["import React from 'react';\n\ntype State = {\n  pressed: boolean,\n  pressedKey: string,\n};\n\nexport class App extends React.Component<{}, State> {\n  state: Readonly<State> = {\n    pressed: false,\n    pressedKey: '',\n  };\n\n  componentDidMount() {\n    document.addEventListener('keyup', this.listenKeyups);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('keyup', this.listenKeyups);\n  }\n\n  listenKeyups = (event: KeyboardEvent) => {\n    this.setState({\n      pressed: true,\n      pressedKey: event.key,\n    });\n  };\n\n  render() {\n    const { pressed, pressedKey } = this.state;\n\n    return (\n      <div className=\"App\">\n        <p className=\"App__message\">\n          {(pressed)\n            ? `The last pressed key is [${pressedKey}]`\n            : 'Nothing was pressed yet'}\n        </p>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nimport './index.scss';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}